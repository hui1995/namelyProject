# Generated by Django 2.2 on 2021-03-08 03:37

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Auth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048)),
            ],
        ),
        migrations.CreateModel(
            name='AuthRelationAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.IntegerField()),
                ('auth_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Homeowner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('h_house', models.CharField(max_length=2048)),
                ('h_name', models.CharField(max_length=2048)),
                ('h_id', models.CharField(max_length=2048)),
                ('h_phone', models.CharField(max_length=11)),
                ('h_cname', models.CharField(max_length=2048)),
                ('h_cphone', models.CharField(max_length=11)),
                ('h_password', models.CharField(max_length=2048)),
                ('h_sparce', models.CharField(max_length=2048)),
                ('s_avther', models.CharField(default='/static/images/default.png', max_length=2048)),
            ],
        ),
        migrations.CreateModel(
            name='Public',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_title', models.CharField(max_length=2048)),
                ('p_content', models.TextField()),
                ('p_time', models.DateTimeField(default=datetime.datetime(2021, 3, 8, 11, 37, 14, 336387))),
            ],
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_place', models.CharField(max_length=2048)),
                ('r_name', models.CharField(max_length=2048)),
                ('r_phone', models.CharField(max_length=11)),
                ('r_status', models.CharField(max_length=64)),
                ('r_time', models.DateTimeField(default=datetime.datetime(2021, 3, 8, 11, 37, 14, 336880))),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_number', models.CharField(max_length=2048)),
                ('s_name', models.CharField(max_length=2048)),
                ('d_name', models.CharField(max_length=2048)),
                ('j_name', models.CharField(max_length=2048)),
                ('s_explan', models.CharField(max_length=2048)),
                ('s_id', models.CharField(max_length=26)),
                ('s_phone', models.CharField(max_length=11)),
                ('s_cname', models.CharField(max_length=11)),
                ('s_cphone', models.CharField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_content', models.TextField()),
                ('h_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Homeowner')),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_phone', models.CharField(max_length=2048)),
                ('g_gname', models.CharField(max_length=2048)),
                ('g_gphone', models.CharField(max_length=2048)),
                ('g_time', models.DateTimeField(default=datetime.datetime(2021, 3, 8, 11, 37, 14, 337873))),
                ('g_status', models.CharField(max_length=64)),
                ('h_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Homeowner')),
            ],
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.TextField()),
                ('c_time', models.DateTimeField(default=datetime.datetime(2021, 3, 8, 11, 37, 14, 336880))),
                ('c_status', models.CharField(max_length=64)),
                ('h_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Homeowner')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('a_phone', models.CharField(max_length=11)),
                ('a_auth', models.IntegerField(default=1)),
                ('a_sparce', models.CharField(max_length=64)),
                ('a_status', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
